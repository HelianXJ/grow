#!/usr/bin/env node

const os = require('os')
const path = require('path')
const program = require('commander')
const uid = require('uid')
const rm = require('rimraf').sync

const compile = require('../src/compile.js')
const config = require('../src/config.js')
const { downloadGitRepo } = require('../src/github.js')
const { makeTmpDir, makeTmpDirDev, makeRepoURL } = require('../src/utils/utils.js')
const { error, success } = require('../src/utils/logger.js')
const ui = require('../src/utils/ui.js')

/**
 * Usage
 */

program
  .usage('<template name> <project name> [options]')
  .option('-i, --indir', 'generate files in current folder')
  .parse(process.argv)

/**
 * Arguments parsing
 */

// Need 'template name' and 'project name' for init
if (program.args.length < 2) {
  return program.help()
}

const templateName = program.args[0]
const projectName = program.args[1]
const inDir = program.indir

downloadAndCompile()

/**
 * Download and Compile
 */

function downloadAndCompile() {
  // const tmpPath = makeTmpDir()
  const tmpPath = makeTmpDirDev()
  const targetPath = path.resolve('.')

  // github username
  const username = config.getData().username

  ui.download.start()
  downloadGitRepo(makeRepoURL(username, templateName), tmpPath, err => {
    if (err) {
      ui.download.fail()
      error(err)
    }
    
    ui.download.succeed()
    process.on('exit', () => rm(tmpPath))

    ui.compile.start()
    compile(inDir, projectName, tmpPath, targetPath, err => {
      if (err) {
        // ui.compile.fail()
        error(err)
      }
      ui.compile.succeed()

      success('Grow finished! Now ready to code')
    })
  })
}
